// automatically generated by Xtext
grammar org.rm2pt.sample.lab2.Dsl with org.eclipse.xtext.common.Terminals

import "http://www.rm2pt.com/lab2" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Class returns Class:
	{Class}
	'Class'
	'{'
		('id' id=EString)?
		('studentnum' studentnum=EInt)?
		('grade' grade=EString)?
		('teacher' '{' teacher+=Teacher ( "," teacher+=Teacher)* '}' )?
		('student' '{' student+=Student ( "," student+=Student)* '}' )?
	'}';







EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;

Teacher returns Teacher:
	'Teacher'
	name=EString
	'{'
		('id' id=EString)?
		('classid' classid=EString)?
		'correct' '(' correct+=[SubmitedPaper|EString] ( "," correct+=[SubmitedPaper|EString])* ')' 
		('teaching' '{' teaching+=Course ( "," teaching+=Course)* '}' )?
		('input' '{' input+=ReportCard ( "," input+=ReportCard)* '}' )?
	'}';

Student returns Student:
	'Student'
	name=EString
	'{'
		('id' id=EString)?
		('classid' classid=EString)?
		'have' have=[ReportCard|EString]
		('answer' '{' answer+=ExamPaper ( "," answer+=ExamPaper)* '}' )?
	'}';

Course returns Course:
	{Course}
	'Course'
	name=EString
	'{'
		('id' id=EString)?
		('stunum' stunum=EInt)?
		('mean' mean=EFloat)?
	'}';

ReportCard returns ReportCard:
	{ReportCard}
	'ReportCard'
	'{'
		('id' id=EString)?
		('stuid' stuid=EString)?
		('stuname' stuname=EString)?
		('totalscore' totalscore=EFloat)?
		('rank' rank=EInt)?
	'}';

SubmitedPaper returns SubmitedPaper:
	{SubmitedPaper}
	(ifcorrect?='ifcorrect')?
	(ifanswer?='ifanswer')?
	'SubmitedPaper'
	'{'
		('id' id=EString)?
		('stuid' stuid=EString)?
		('teaid' teaid=EString)?
		('courseid' courseid=EString)?
	'}';

EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

ExamPaper returns ExamPaper:
	{ExamPaper}
	(ifanswer?='ifanswer')?
	(ifcorrect?='ifcorrect')?
	'ExamPaper'
	'{'
		('id' id=EString)?
		('courseid' courseid=EString)?
		('teaid' teaid=EString)?
		('stuid' stuid=EString)?
		('score' score=EFloat)?
		('submit' '{' submit+=SubmitedPaper ( "," submit+=SubmitedPaper)* '}' )?
	'}';
